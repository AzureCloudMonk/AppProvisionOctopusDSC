{
  "$type": "Octopus.Core.Model.Projects.CommunityActionTemplate, Octopus.Core",
  "Id": "CommunityActionTemplates-145",
  "Name": "MSMQ - Create Transactional Queue",
  "ExternalId": "4c22f201-c634-4a22-aa55-ae24dc83d588",
  "Description": "Create one or more MSMQ transactional queues and configure permissions.",
  "Version": 8,
  "ActionType": "Octopus.Script",
  "Author": "fireydude",
  "Website": "https://library.octopus.com/step-templates/4c22f201-c634-4a22-aa55-ae24dc83d588",
  "HistoryUrl": "https://github.com/OctopusDeploy/Library/commits/master/step-templates/msmq-create-transactional-queue.json",
  "Category": "Windows",
  "Properties": {
    "Octopus.Action.Script.ScriptBody": "#Split the Queues into an array\n$arrQueues = $MSMQQueues.split(\";\")\nforeach ($Queue in $arrQueues) \n{\n    #Does Queue Exists Already?\n    $thisQueue = Get-MSMQQueue $Queue\n    if (!$thisQueue)\n    {\n        #not found, create\n        Write-Output \"Creating Queue: \" $Queue\n        New-MsmqQueue -Name \"$Queue\" -Label \"private$\\$Queue\" -Transactional | Out-Null\n        $thisQueue = Get-MSMQQueue $Queue    \n    }\n    else\n    {\n        Write-Output \"Queue Exists: \" $thisQueue.QueueName\n        \n        if($ResetPermissions -eq \"True\")\n        {\n            foreach($domain in $ResetDomains.split(\";\"))\n            {\n                # reset permissions\n                $QueuePermissions = $thisQueue | Get-MsmqQueueACL\n                foreach ($AccessItem in $QueuePermissions)\n                {\n                    $userName = [Environment]::UserName\n                    if($AccessItem.AccountName -NotLike \"*$userName\") # not current user\n                    {\n                        $domain = \"$($domain)*\" #append * to end of domain\n                        if ($AccessItem.AccountName -Like \"$($domain)*\")\n                        {\n                            Write-Output \"Removing Permissions $($AccessItem.Right) for $($AccessItem.AccountName)\"\n                            Try\n                            {\n                                $thisQueue | Set-MsmqQueueACL -UserName $AccessItem.AccountName -Remove $AccessItem.Right | Out-Null\n                            }\n                            Catch\n                            {\n                                Write-Output \"Could not set permissions item $_.Exception.Message\"\n                                Break\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    #set acl for users\n    $arrUsers = $MSMQUsers.split(\";\")\n    foreach ($User in $arrUsers)     \n    {    \n        if ($User)\n        {    \n            Write-Output \"Adding ACL for User: \" $User        \n            \n            #allows\n            if ($MSMQPermAllow)\n            {\n                $arrPermissions = $MSMQPermAllow.split(\";\")\n                foreach ($Permission in $arrPermissions)     \n                {\n                    $thisQueue | Set-MsmqQueueAcl -UserName $User -Allow $Permission | Out-Null                \n                    Write-Output \"ACL Allow set: $Permission\"\n                }\n            }\n                \n            #denies\n            if ($MSMQPermDeny)\n            {\n                $arrPermissions = $MSMQPermDeny.split(\";\")\n                foreach ($Permission in $arrPermissions)     \n                {\n                    $thisQueue | Set-MsmqQueueAcl -UserName $User -Deny $Permission | Out-Null\n                    Write-Output \"ACL Deny set: $Permission\"\n                }\n            }\n        }\n    }   \n    \n    \n    $arrAdminUsers = $MSMQAdminUsers.split(\";\") \n    foreach ($User in $arrAdminUsers)     \n    {    \n        if ($User)\n        { \n            Write-Output \"Adding ACL for Admin User: \" $User        \n            \n            #allows\n            if ($MSMQPermAdminAllow)\n            {\n                $arrPermissions = $MSMQPermAdminAllow.split(\";\")\n                foreach ($Permission in $arrPermissions)     \n                {\n                    $thisQueue | Set-MsmqQueueAcl -UserName $User -Allow $Permission | Out-Null                \n                    Write-Output \"ACL Allow admin set: $Permission\"\n                }\n            }\n                \n            #denies\n            if ($MSMQPermAdminDeny)\n            {\n                $arrPermissions = $MSMQPermAdminDeny.split(\";\")\n                foreach ($Permission in $arrPermissions)     \n                {\n                    $thisQueue | Set-MsmqQueueAcl -UserName $User -Deny $Permission | Out-Null\n                    Write-Output \"ACL Deny admin set: $Permission\"\n                }\n            }\n        }\n    }\n}",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": "",
    "Octopus.Action.Package.FeedId": "",
    "Octopus.Action.Package.PackageId": ""
  },
  "Parameters": [
    {
      "Id": null,
      "Name": "$MSMQQueues",
      "Label": "Queue names",
      "HelpText": "Queue names, separated by semicolons. Example: _Queue1;Queue2;Queue3_",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "$MSMQUsers",
      "Label": "Queue users",
      "HelpText": "Users with access to the queue separated by semicolons. Example: _DOMAIN\\User1;DOMAIN\\User2_",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "MSMQPermAllow",
      "Label": "Allowed permissions",
      "HelpText": "Permissions granted to the queue users, separated by semicolons. Example: _DeleteMessage;PeekMessage;ReceiveMessage_",
      "DefaultValue": "DeleteMessage;PeekMessage;ReceiveMessage;WriteMessage",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "MSMQPermDeny",
      "Label": "Denied permissions",
      "HelpText": "Denied permissions, separated by semicolons: _TakeQueueOwnership_",
      "DefaultValue": "TakeQueueOwnership",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "MSMQAdminUsers",
      "Label": "Admin queue users",
      "HelpText": "Users with access to the queue separated by semicolons. Example: _DOMAIN\\User1;DOMAIN\\User2_",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "MSMQPermAdminAllow",
      "Label": "Allowed admin permissions",
      "HelpText": "Permissions granted to the queue admin users, separated by semicolons. Example: _DeleteMessage;PeekMessage;ReceiveMessage_",
      "DefaultValue": "FullControl",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "MSMQPermAdminDeny",
      "Label": "Denied admin permissions",
      "HelpText": "Denied permissions, separated by semicolons: _TakeQueueOwnership_",
      "DefaultValue": "",
      "DisplaySettings": {}
    },
    {
      "Id": null,
      "Name": "ResetPermissions",
      "Label": "Reset Permissions",
      "HelpText": "Remove all existing permissions from the Queue if it already exists",
      "DefaultValue": "false",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": null,
      "Name": "ResetDomains",
      "Label": "Reset Permissions Domains",
      "HelpText": "This is used if Reset Permissions is set.\nExample: YOURDOMAIN1;YOURDOMAIN2",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LogoAttachmentKey": "CommunityActionTemplates-137-2018011412241537",
  "LogoAttachmentMimeType": "image/png"
}